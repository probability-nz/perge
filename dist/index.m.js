import e from"peerjs";import{Connection as n,init as t,DocSet as o}from"automerge";var r=function(){function r(n,t){var r=this;void 0===t&&(t={}),this._connections={},this._actorId=n,this.peer=t.peer||new e(this._actorId),this.docSet=t.docSet||new o,this._encode=t.encode||JSON.stringify,this._decode=t.decode||JSON.parse,this.peer.on("connection",function(e){r._connections[e.peer]||r.connect(e.peer,e),e.on("data",function(n){r._connections[e.peer].receiveMsg(r._decode(n))})})}var c=r.prototype;return c.connect=function(e,t,o){var r=this;if(this._connections[e])return this.peer.connections[e];var c=t||this.peer.connect(e,o),i=this._connections[e]=new n(this.docSet,function(e){c.send(r._encode(e))}),s=function(){r._connections[e]&&(delete r._connections[e],i.close())};return c.on("close",s),c.on("error",s),i.open(),c},c.get=function(e){return this.docSet.getDoc(e)||t(this._actorId)},c.select=function(e){var n=this;return function(t){var o=t.apply(void 0,[n.get(e)].concat([].slice.call(arguments,1)));return n.docSet.setDoc(e,o),o}},c.subscribe=function(e,n){var t=this;if("function"==typeof e)return this.docSet.registerHandler(e),function(){return t.docSet.unregisterHandler(e)};if("string"==typeof e&&n){var o=function(t,o){t===e&&n(o)};return this.docSet.registerHandler(o),function(){return t.docSet.unregisterHandler(o)}}return function(){}},r}();export default r;
//# sourceMappingURL=index.m.js.map
