{"version":3,"file":"index.modern.js","sources":["../src/index.ts"],"sourcesContent":["import Peer from \"peerjs\";\nimport {\n  init,\n  Connection,\n  DocSet,\n  Doc,\n  ChangeFn,\n  DocSetHandler,\n  change,\n  undo,\n  redo,\n} from \"automerge\";\n\ntype AutomergeUpdateMethod = typeof change | typeof undo | typeof redo;\n\nexport interface PergeConfig {\n  decode?: (msg: string) => any;\n  encode?: (msg: any) => string;\n  peer?: Peer;\n  docSet?: DocSet<any>;\n}\n\nexport default class Perge {\n  readonly peer: Peer;\n  readonly docSet: DocSet<any>;\n\n  private _connections: { [id: string]: Connection<any> } = {};\n  private _actorId: string;\n  private _encode: (msg: any) => string;\n  private _decode: (msg: string) => any;\n\n  constructor(actorId: string, config: PergeConfig = {}) {\n    this._actorId = actorId;\n    this.peer = config.peer || new Peer(this._actorId);\n    this.docSet = config.docSet || new DocSet();\n    this._encode = config.encode || JSON.stringify;\n    this._decode = config.decode || JSON.parse;\n    this.peer.on(\"connection\", (conn) => {\n      if (!this._connections[conn.peer]) this.connect(conn.peer, conn);\n    });\n  }\n\n  public connect(\n    id: string,\n    conn?: Peer.DataConnection,\n    options?: Peer.PeerConnectOption\n  ): Peer.DataConnection {\n    if (this._connections[id]) return this.peer.connections[id];\n    const peer = conn || this.peer.connect(id, options);\n    const connection = (this._connections[id] = new Connection(\n      this.docSet,\n      (msg) => {\n        peer.send(this._encode(msg));\n      }\n    ));\n    const handleMsg = (msg: any) => connection.receiveMsg(this._decode(msg));\n    const cleanup = () => {\n      peer.off(\"data\", handleMsg);\n      if (this._connections[id]) {\n        delete this._connections[id];\n        connection.close();\n      }\n    };\n    peer.on(\"data\", handleMsg);\n    peer.on(\"close\", cleanup);\n    peer.on(\"error\", cleanup);\n    connection.open();\n    return peer;\n  }\n\n  public get<T>(id: string): Doc<T> {\n    return this.docSet.getDoc(id) || init(this._actorId);\n  }\n\n  public select<T>(\n    id: string\n  ): (changeMethod: AutomergeUpdateMethod, ...args: any[]) => Doc<T> {\n    return (changeMethod: Function, ...args: any[]): Doc<T> => {\n      const newDoc = changeMethod(this.get(id), ...args);\n      this.docSet.setDoc(id, newDoc);\n      return newDoc;\n    };\n  }\n\n  public subscribe<T>(\n    idOrSetHandler: string | DocSetHandler<T>,\n    callback?: ChangeFn<T>\n  ): () => void {\n    if (typeof idOrSetHandler === \"function\") {\n      this.docSet.registerHandler(idOrSetHandler);\n      return () => this.docSet.unregisterHandler(idOrSetHandler);\n    }\n    if (typeof idOrSetHandler === \"string\" && !!callback) {\n      const handler = (docId: string, doc: T) => {\n        if (docId === idOrSetHandler) callback(doc);\n      };\n      this.docSet.registerHandler(handler);\n      return () => this.docSet.unregisterHandler(handler);\n    }\n    return () => {};\n  }\n}\n"],"names":["constructor","actorId","config","this","_actorId","peer","Peer","docSet","DocSet","_encode","encode","JSON","stringify","_decode","decode","parse","on","conn","_connections","connect","id","options","connections","connection","Connection","msg","send","handleMsg","receiveMsg","cleanup","off","close","open","get","getDoc","init","select","changeMethod","args","newDoc","setDoc","subscribe","idOrSetHandler","callback","registerHandler","unregisterHandler","handler","docId","doc"],"mappings":"wGA+BEA,YAAYC,EAAiBC,EAAsB,IAL3CC,kBAAkD,GAMxDA,KAAKC,SAAWH,EAChBE,KAAKE,KAAOH,EAAOG,MAAQ,IAAIC,EAAKH,KAAKC,UACzCD,KAAKI,OAASL,EAAOK,QAAU,IAAIC,EACnCL,KAAKM,QAAUP,EAAOQ,QAAUC,KAAKC,UACrCT,KAAKU,QAAUX,EAAOY,QAAUH,KAAKI,MACrCZ,KAAKE,KAAKW,GAAG,aAAeC,IACrBd,KAAKe,aAAaD,EAAKZ,OAAOF,KAAKgB,QAAQF,EAAKZ,KAAMY,KAIxDE,QACLC,EACAH,EACAI,GAEA,GAAIlB,KAAKe,aAAaE,GAAK,YAAYf,KAAKiB,YAAYF,GACxD,MAAMf,EAAOY,GAAQd,KAAKE,KAAKc,QAAQC,EAAIC,GACrCE,EAAcpB,KAAKe,aAAaE,GAAM,IAAII,EAC9CrB,KAAKI,OACJkB,IACCpB,EAAKqB,KAAKvB,KAAKM,QAAQgB,MAGrBE,EAAaF,GAAaF,EAAWK,WAAWzB,KAAKU,QAAQY,IAC7DI,EAAU,KACdxB,EAAKyB,IAAI,OAAQH,GACbxB,KAAKe,aAAaE,iBACRF,aAAaE,GACzBG,EAAWQ,UAOf,OAJA1B,EAAKW,GAAG,OAAQW,GAChBtB,EAAKW,GAAG,QAASa,GACjBxB,EAAKW,GAAG,QAASa,GACjBN,EAAWS,OACJ3B,EAGF4B,IAAOb,GACZ,YAAYb,OAAO2B,OAAOd,IAAOe,EAAKhC,KAAKC,UAGtCgC,OACLhB,GAEA,MAAO,CAACiB,KAA2BC,KACjC,MAAMC,EAASF,EAAalC,KAAK8B,IAAIb,MAAQkB,GAE7C,OADAnC,KAAKI,OAAOiC,OAAOpB,EAAImB,GAChBA,GAIJE,UACLC,EACAC,GAEA,GAA8B,mBAAnBD,EAET,OADAvC,KAAKI,OAAOqC,gBAAgBF,GACrB,IAAMvC,KAAKI,OAAOsC,kBAAkBH,GAE7C,GAA8B,iBAAnBA,GAAiCC,EAAU,CACpD,MAAMG,EAAU,CAACC,EAAeC,KAC1BD,IAAUL,GAAgBC,EAASK,IAGzC,OADA7C,KAAKI,OAAOqC,gBAAgBE,GACrB,IAAM3C,KAAKI,OAAOsC,kBAAkBC,GAE7C,MAAO"}