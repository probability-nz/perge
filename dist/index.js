var e,n=(e=require("peerjs"))&&"object"==typeof e&&"default"in e?e.default:e,t=require("automerge");module.exports=function(){function e(e,o){var r=this;void 0===o&&(o={}),this._connections={},this._actorId=e,this.peer=o.peer||new n(this._actorId),this.docSet=o.docSet||new t.DocSet,this._encode=o.encode||JSON.stringify,this._decode=o.decode||JSON.parse,this.peer.on("connection",function(e){r._connections[e.peer]||r.connect(e.peer,e)})}var o=e.prototype;return o.connect=function(e,n,o){var r=this;if(this._connections[e])return this.peer.connections[e];var c=n||this.peer.connect(e,o),i=this._connections[e]=new t.Connection(this.docSet,function(e){c.send(r._encode(e))}),s=function(e){return i.receiveMsg(r._decode(e))},u=function(){c.off("data",s),r._connections[e]&&(delete r._connections[e],i.close())};return c.on("data",s),c.on("close",u),c.on("error",u),i.open(),c},o.get=function(e){return this.docSet.getDoc(e)||t.init(this._actorId)},o.select=function(e){var n=this;return function(t){var o=t.apply(void 0,[n.get(e)].concat([].slice.call(arguments,1)));return n.docSet.setDoc(e,o),o}},o.subscribe=function(e,n){var t=this;if("function"==typeof e)return this.docSet.registerHandler(e),function(){return t.docSet.unregisterHandler(e)};if("string"==typeof e&&n){var o=function(t,o){t===e&&n(o)};return this.docSet.registerHandler(o),function(){return t.docSet.unregisterHandler(o)}}return function(){}},e}();
//# sourceMappingURL=index.js.map
